version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: newspulse_postgres
    environment:
      POSTGRES_DB: newspulse
      POSTGRES_USER: newspulse_user
      POSTGRES_PASSWORD: newspulse_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U newspulse_user -d newspulse"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: newspulse_redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # NewsPulse API Application
  api:
    build:
      context: .
      target: production
    container_name: newspulse_api
    environment:
      - DATABASE_URL=postgresql://newspulse_user:newspulse_password@postgres:5432/newspulse
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  # RSS Fetcher (Scheduled job)
  fetcher:
    build:
      context: .
      target: production
    container_name: newspulse_fetcher
    environment:
      - DATABASE_URL=postgresql://newspulse_user:newspulse_password@postgres:5432/newspulse
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        while true; do
          echo 'Running RSS fetcher...'
          python run_fetcher.py
          echo 'RSS fetcher completed. Sleeping for 1 hour...'
          sleep 3600
        done
      "
    restart: unless-stopped

  # Content Extractor (Scheduled job)
  extractor:
    build:
      context: .
      target: production
    container_name: newspulse_extractor
    environment:
      - DATABASE_URL=postgresql://newspulse_user:newspulse_password@postgres:5432/newspulse
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: >
      sh -c "
        while true; do
          echo 'Running content extractor...'
          python run_extractor.py
          echo 'Content extractor completed. Sleeping for 2 hours...'
          sleep 7200
        done
      "
    restart: unless-stopped

  # Classifier (Scheduled job)
  classifier:
    build:
      context: .
      target: production
    container_name: newspulse_classifier
    environment:
      - DATABASE_URL=postgresql://newspulse_user:newspulse_password@postgres:5432/newspulse
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./models:/app/models
      - ./logs:/app/logs
    command: >
      sh -c "
        while true; do
          echo 'Running classifier...'
          python run_classifier.py
          echo 'Classifier completed. Sleeping for 3 hours...'
          sleep 10800
        done
      "
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  default:
    name: newspulse_network